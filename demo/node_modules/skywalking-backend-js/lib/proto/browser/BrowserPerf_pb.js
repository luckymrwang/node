"use strict";
// source: browser/BrowserPerf.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck
var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();
var common_Common_pb = require('../common/Common_pb.js');
goog.object.extend(proto, common_Common_pb);
goog.exportSymbol('proto.BrowserErrorLog', null, global);
goog.exportSymbol('proto.BrowserPerfData', null, global);
goog.exportSymbol('proto.ErrorCategory', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.BrowserPerfData = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.BrowserPerfData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.BrowserPerfData.displayName = 'proto.BrowserPerfData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.BrowserErrorLog = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.BrowserErrorLog, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.BrowserErrorLog.displayName = 'proto.BrowserErrorLog';
}
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.BrowserPerfData.prototype.toObject = function (opt_includeInstance) {
        return proto.BrowserPerfData.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.BrowserPerfData} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.BrowserPerfData.toObject = function (includeInstance, msg) {
        var f, obj = {
            service: jspb.Message.getFieldWithDefault(msg, 1, ""),
            serviceversion: jspb.Message.getFieldWithDefault(msg, 2, ""),
            time: jspb.Message.getFieldWithDefault(msg, 3, 0),
            pagepath: jspb.Message.getFieldWithDefault(msg, 4, ""),
            redirecttime: jspb.Message.getFieldWithDefault(msg, 5, 0),
            dnstime: jspb.Message.getFieldWithDefault(msg, 6, 0),
            reqtime: jspb.Message.getFieldWithDefault(msg, 7, 0),
            domanalysistime: jspb.Message.getFieldWithDefault(msg, 8, 0),
            domreadytime: jspb.Message.getFieldWithDefault(msg, 9, 0),
            blanktime: jspb.Message.getFieldWithDefault(msg, 10, 0)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.BrowserPerfData}
 */
proto.BrowserPerfData.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.BrowserPerfData;
    return proto.BrowserPerfData.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.BrowserPerfData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.BrowserPerfData}
 */
proto.BrowserPerfData.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setService(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setServiceversion(value);
                break;
            case 3:
                var value = /** @type {number} */ (reader.readInt64());
                msg.setTime(value);
                break;
            case 4:
                var value = /** @type {string} */ (reader.readString());
                msg.setPagepath(value);
                break;
            case 5:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setRedirecttime(value);
                break;
            case 6:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setDnstime(value);
                break;
            case 7:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setReqtime(value);
                break;
            case 8:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setDomanalysistime(value);
                break;
            case 9:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setDomreadytime(value);
                break;
            case 10:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setBlanktime(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.BrowserPerfData.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.BrowserPerfData.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.BrowserPerfData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.BrowserPerfData.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getService();
    if (f.length > 0) {
        writer.writeString(1, f);
    }
    f = message.getServiceversion();
    if (f.length > 0) {
        writer.writeString(2, f);
    }
    f = message.getTime();
    if (f !== 0) {
        writer.writeInt64(3, f);
    }
    f = message.getPagepath();
    if (f.length > 0) {
        writer.writeString(4, f);
    }
    f = message.getRedirecttime();
    if (f !== 0) {
        writer.writeInt32(5, f);
    }
    f = message.getDnstime();
    if (f !== 0) {
        writer.writeInt32(6, f);
    }
    f = message.getReqtime();
    if (f !== 0) {
        writer.writeInt32(7, f);
    }
    f = message.getDomanalysistime();
    if (f !== 0) {
        writer.writeInt32(8, f);
    }
    f = message.getDomreadytime();
    if (f !== 0) {
        writer.writeInt32(9, f);
    }
    f = message.getBlanktime();
    if (f !== 0) {
        writer.writeInt32(10, f);
    }
};
/**
 * optional string service = 1;
 * @return {string}
 */
proto.BrowserPerfData.prototype.getService = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.BrowserPerfData} returns this
 */
proto.BrowserPerfData.prototype.setService = function (value) {
    return jspb.Message.setProto3StringField(this, 1, value);
};
/**
 * optional string serviceVersion = 2;
 * @return {string}
 */
proto.BrowserPerfData.prototype.getServiceversion = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};
/**
 * @param {string} value
 * @return {!proto.BrowserPerfData} returns this
 */
proto.BrowserPerfData.prototype.setServiceversion = function (value) {
    return jspb.Message.setProto3StringField(this, 2, value);
};
/**
 * optional int64 time = 3;
 * @return {number}
 */
proto.BrowserPerfData.prototype.getTime = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};
/**
 * @param {number} value
 * @return {!proto.BrowserPerfData} returns this
 */
proto.BrowserPerfData.prototype.setTime = function (value) {
    return jspb.Message.setProto3IntField(this, 3, value);
};
/**
 * optional string pagePath = 4;
 * @return {string}
 */
proto.BrowserPerfData.prototype.getPagepath = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};
/**
 * @param {string} value
 * @return {!proto.BrowserPerfData} returns this
 */
proto.BrowserPerfData.prototype.setPagepath = function (value) {
    return jspb.Message.setProto3StringField(this, 4, value);
};
/**
 * optional int32 redirectTime = 5;
 * @return {number}
 */
proto.BrowserPerfData.prototype.getRedirecttime = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};
/**
 * @param {number} value
 * @return {!proto.BrowserPerfData} returns this
 */
proto.BrowserPerfData.prototype.setRedirecttime = function (value) {
    return jspb.Message.setProto3IntField(this, 5, value);
};
/**
 * optional int32 dnsTime = 6;
 * @return {number}
 */
proto.BrowserPerfData.prototype.getDnstime = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};
/**
 * @param {number} value
 * @return {!proto.BrowserPerfData} returns this
 */
proto.BrowserPerfData.prototype.setDnstime = function (value) {
    return jspb.Message.setProto3IntField(this, 6, value);
};
/**
 * optional int32 reqTime = 7;
 * @return {number}
 */
proto.BrowserPerfData.prototype.getReqtime = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};
/**
 * @param {number} value
 * @return {!proto.BrowserPerfData} returns this
 */
proto.BrowserPerfData.prototype.setReqtime = function (value) {
    return jspb.Message.setProto3IntField(this, 7, value);
};
/**
 * optional int32 domAnalysisTime = 8;
 * @return {number}
 */
proto.BrowserPerfData.prototype.getDomanalysistime = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};
/**
 * @param {number} value
 * @return {!proto.BrowserPerfData} returns this
 */
proto.BrowserPerfData.prototype.setDomanalysistime = function (value) {
    return jspb.Message.setProto3IntField(this, 8, value);
};
/**
 * optional int32 domReadyTime = 9;
 * @return {number}
 */
proto.BrowserPerfData.prototype.getDomreadytime = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};
/**
 * @param {number} value
 * @return {!proto.BrowserPerfData} returns this
 */
proto.BrowserPerfData.prototype.setDomreadytime = function (value) {
    return jspb.Message.setProto3IntField(this, 9, value);
};
/**
 * optional int32 blankTime = 10;
 * @return {number}
 */
proto.BrowserPerfData.prototype.getBlanktime = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};
/**
 * @param {number} value
 * @return {!proto.BrowserPerfData} returns this
 */
proto.BrowserPerfData.prototype.setBlanktime = function (value) {
    return jspb.Message.setProto3IntField(this, 10, value);
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.BrowserErrorLog.prototype.toObject = function (opt_includeInstance) {
        return proto.BrowserErrorLog.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.BrowserErrorLog} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.BrowserErrorLog.toObject = function (includeInstance, msg) {
        var f, obj = {
            uniqueid: jspb.Message.getFieldWithDefault(msg, 1, ""),
            service: jspb.Message.getFieldWithDefault(msg, 2, ""),
            serviceversion: jspb.Message.getFieldWithDefault(msg, 3, ""),
            time: jspb.Message.getFieldWithDefault(msg, 4, 0),
            pagepath: jspb.Message.getFieldWithDefault(msg, 5, ""),
            category: jspb.Message.getFieldWithDefault(msg, 6, 0),
            grade: jspb.Message.getFieldWithDefault(msg, 7, ""),
            message: jspb.Message.getFieldWithDefault(msg, 8, ""),
            line: jspb.Message.getFieldWithDefault(msg, 9, 0),
            col: jspb.Message.getFieldWithDefault(msg, 10, 0),
            stack: jspb.Message.getFieldWithDefault(msg, 11, ""),
            errorurl: jspb.Message.getFieldWithDefault(msg, 12, ""),
            firstreportederror: jspb.Message.getBooleanFieldWithDefault(msg, 13, false)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.BrowserErrorLog}
 */
proto.BrowserErrorLog.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.BrowserErrorLog;
    return proto.BrowserErrorLog.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.BrowserErrorLog} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.BrowserErrorLog}
 */
proto.BrowserErrorLog.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setUniqueid(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setService(value);
                break;
            case 3:
                var value = /** @type {string} */ (reader.readString());
                msg.setServiceversion(value);
                break;
            case 4:
                var value = /** @type {number} */ (reader.readInt64());
                msg.setTime(value);
                break;
            case 5:
                var value = /** @type {string} */ (reader.readString());
                msg.setPagepath(value);
                break;
            case 6:
                var value = /** @type {!proto.ErrorCategory} */ (reader.readEnum());
                msg.setCategory(value);
                break;
            case 7:
                var value = /** @type {string} */ (reader.readString());
                msg.setGrade(value);
                break;
            case 8:
                var value = /** @type {string} */ (reader.readString());
                msg.setMessage(value);
                break;
            case 9:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setLine(value);
                break;
            case 10:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setCol(value);
                break;
            case 11:
                var value = /** @type {string} */ (reader.readString());
                msg.setStack(value);
                break;
            case 12:
                var value = /** @type {string} */ (reader.readString());
                msg.setErrorurl(value);
                break;
            case 13:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setFirstreportederror(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.BrowserErrorLog.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.BrowserErrorLog.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.BrowserErrorLog} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.BrowserErrorLog.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getUniqueid();
    if (f.length > 0) {
        writer.writeString(1, f);
    }
    f = message.getService();
    if (f.length > 0) {
        writer.writeString(2, f);
    }
    f = message.getServiceversion();
    if (f.length > 0) {
        writer.writeString(3, f);
    }
    f = message.getTime();
    if (f !== 0) {
        writer.writeInt64(4, f);
    }
    f = message.getPagepath();
    if (f.length > 0) {
        writer.writeString(5, f);
    }
    f = message.getCategory();
    if (f !== 0.0) {
        writer.writeEnum(6, f);
    }
    f = message.getGrade();
    if (f.length > 0) {
        writer.writeString(7, f);
    }
    f = message.getMessage();
    if (f.length > 0) {
        writer.writeString(8, f);
    }
    f = message.getLine();
    if (f !== 0) {
        writer.writeInt32(9, f);
    }
    f = message.getCol();
    if (f !== 0) {
        writer.writeInt32(10, f);
    }
    f = message.getStack();
    if (f.length > 0) {
        writer.writeString(11, f);
    }
    f = message.getErrorurl();
    if (f.length > 0) {
        writer.writeString(12, f);
    }
    f = message.getFirstreportederror();
    if (f) {
        writer.writeBool(13, f);
    }
};
/**
 * optional string uniqueId = 1;
 * @return {string}
 */
proto.BrowserErrorLog.prototype.getUniqueid = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.BrowserErrorLog} returns this
 */
proto.BrowserErrorLog.prototype.setUniqueid = function (value) {
    return jspb.Message.setProto3StringField(this, 1, value);
};
/**
 * optional string service = 2;
 * @return {string}
 */
proto.BrowserErrorLog.prototype.getService = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};
/**
 * @param {string} value
 * @return {!proto.BrowserErrorLog} returns this
 */
proto.BrowserErrorLog.prototype.setService = function (value) {
    return jspb.Message.setProto3StringField(this, 2, value);
};
/**
 * optional string serviceVersion = 3;
 * @return {string}
 */
proto.BrowserErrorLog.prototype.getServiceversion = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};
/**
 * @param {string} value
 * @return {!proto.BrowserErrorLog} returns this
 */
proto.BrowserErrorLog.prototype.setServiceversion = function (value) {
    return jspb.Message.setProto3StringField(this, 3, value);
};
/**
 * optional int64 time = 4;
 * @return {number}
 */
proto.BrowserErrorLog.prototype.getTime = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};
/**
 * @param {number} value
 * @return {!proto.BrowserErrorLog} returns this
 */
proto.BrowserErrorLog.prototype.setTime = function (value) {
    return jspb.Message.setProto3IntField(this, 4, value);
};
/**
 * optional string pagePath = 5;
 * @return {string}
 */
proto.BrowserErrorLog.prototype.getPagepath = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};
/**
 * @param {string} value
 * @return {!proto.BrowserErrorLog} returns this
 */
proto.BrowserErrorLog.prototype.setPagepath = function (value) {
    return jspb.Message.setProto3StringField(this, 5, value);
};
/**
 * optional ErrorCategory category = 6;
 * @return {!proto.ErrorCategory}
 */
proto.BrowserErrorLog.prototype.getCategory = function () {
    return /** @type {!proto.ErrorCategory} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};
/**
 * @param {!proto.ErrorCategory} value
 * @return {!proto.BrowserErrorLog} returns this
 */
proto.BrowserErrorLog.prototype.setCategory = function (value) {
    return jspb.Message.setProto3EnumField(this, 6, value);
};
/**
 * optional string grade = 7;
 * @return {string}
 */
proto.BrowserErrorLog.prototype.getGrade = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};
/**
 * @param {string} value
 * @return {!proto.BrowserErrorLog} returns this
 */
proto.BrowserErrorLog.prototype.setGrade = function (value) {
    return jspb.Message.setProto3StringField(this, 7, value);
};
/**
 * optional string message = 8;
 * @return {string}
 */
proto.BrowserErrorLog.prototype.getMessage = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};
/**
 * @param {string} value
 * @return {!proto.BrowserErrorLog} returns this
 */
proto.BrowserErrorLog.prototype.setMessage = function (value) {
    return jspb.Message.setProto3StringField(this, 8, value);
};
/**
 * optional int32 line = 9;
 * @return {number}
 */
proto.BrowserErrorLog.prototype.getLine = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};
/**
 * @param {number} value
 * @return {!proto.BrowserErrorLog} returns this
 */
proto.BrowserErrorLog.prototype.setLine = function (value) {
    return jspb.Message.setProto3IntField(this, 9, value);
};
/**
 * optional int32 col = 10;
 * @return {number}
 */
proto.BrowserErrorLog.prototype.getCol = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};
/**
 * @param {number} value
 * @return {!proto.BrowserErrorLog} returns this
 */
proto.BrowserErrorLog.prototype.setCol = function (value) {
    return jspb.Message.setProto3IntField(this, 10, value);
};
/**
 * optional string stack = 11;
 * @return {string}
 */
proto.BrowserErrorLog.prototype.getStack = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};
/**
 * @param {string} value
 * @return {!proto.BrowserErrorLog} returns this
 */
proto.BrowserErrorLog.prototype.setStack = function (value) {
    return jspb.Message.setProto3StringField(this, 11, value);
};
/**
 * optional string errorUrl = 12;
 * @return {string}
 */
proto.BrowserErrorLog.prototype.getErrorurl = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};
/**
 * @param {string} value
 * @return {!proto.BrowserErrorLog} returns this
 */
proto.BrowserErrorLog.prototype.setErrorurl = function (value) {
    return jspb.Message.setProto3StringField(this, 12, value);
};
/**
 * optional bool firstReportedError = 13;
 * @return {boolean}
 */
proto.BrowserErrorLog.prototype.getFirstreportederror = function () {
    return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 13, false));
};
/**
 * @param {boolean} value
 * @return {!proto.BrowserErrorLog} returns this
 */
proto.BrowserErrorLog.prototype.setFirstreportederror = function (value) {
    return jspb.Message.setProto3BooleanField(this, 13, value);
};
/**
 * @enum {number}
 */
proto.ErrorCategory = {
    AJAX: 0,
    RESOURCE: 1,
    VUE: 2,
    PROMISE: 3,
    JS: 4,
    UNKNOWN: 5
};
goog.object.extend(exports, proto);
//# sourceMappingURL=BrowserPerf_pb.js.map