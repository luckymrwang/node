"use strict";
/*!
 *
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var logging_1 = require("../logging");
var AgentConfig_1 = tslib_1.__importDefault(require("../config/AgentConfig"));
var logger = logging_1.createLogger(__filename);
var Buffer = /** @class */ (function () {
    function Buffer() {
        this.maxSize = AgentConfig_1.default.maxBufferSize;
        this.buffer = [];
    }
    Object.defineProperty(Buffer.prototype, "length", {
        get: function () {
            return this.buffer.length;
        },
        enumerable: false,
        configurable: true
    });
    Buffer.prototype.put = function (element) {
        if (this.length > this.maxSize) {
            logger.warn('Drop the data because of the buffer is oversize');
            return false;
        }
        this.buffer.push(element);
        return true;
    };
    Buffer.prototype.take = function () {
        return this.buffer.splice(0, 1)[0];
    };
    return Buffer;
}());
exports.default = Buffer;
//# sourceMappingURL=Buffer.js.map